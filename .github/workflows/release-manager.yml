---
name: Release Manager

on:
  pull_request:
    branches:
      - develop
    types:
      - closed

jobs:
  pr-route:
    name: Pull Request Merged
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: Log GitHub Context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo -e "\`\`\`json\n$GITHUB_CONTEXT\n\`\`\`" >> "$GITHUB_STEP_SUMMARY"

      - name: Get Latest Release Datetime
        continue-on-error: true
        id: get-latest-release-datetime
        uses: actions/github-script@v3
        with:
          script: |
            const { data: releases } = await github.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1
            });
            return releases[0].published_at;

      - name: List PRs Since Last Release
        id: list-prs-since-last-release
        uses: actions/github-script@v3
        with:
          script: |
            const { data: pullRequests } = await github.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed',
              base: 'develop',
              sort: 'updated',
              direction: 'desc',
              per_page: 100
            });
            const lastReleaseDatetime = new Date(
              '${{ steps.get-latest-release-datetime.outputs.result }}'
            );
            const pullRequestsSinceLastRelease = pullRequests.filter(pullRequest => {
              const pullRequestMergedDatetime = new Date(pullRequest.merged_at);
              return pullRequestMergedDatetime > lastReleaseDatetime;
            });
            return pullRequestsSinceLastRelease.map(pullRequest => pullRequest.number);

      - name: Log Outputs
        # yamllint disable rule:line-length
        run: |
          echo "Latest Release Datetime: ${{ steps.get-latest-release-datetime.outputs.result }}" >> "$GITHUB_STEP_SUMMARY"
          echo "Pull Requests Since Last Release: ${{ steps.list-prs-since-last-release.outputs.result }}" >> "$GITHUB_STEP_SUMMARY"

      # - name: Set Default Datetime
      #   if: steps.get-latest-release-datetime.outcome == 'failure'
